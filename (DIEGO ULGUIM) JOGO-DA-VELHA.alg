algoritmo "JOGO DA VELHA"
var
MESA:VETOR[1..3,1..3] DE CARACTERE
REVANCHE,PLACAR_P1,PLACAR_P2,PLACAR_V,ULINHA,UCOLUNA,JOGADA,FIMJOGO,X,LINHA,COLUNA,CODIGO,PREAUTO,CONT_O,CONT_X:INTEIRO
TIPO,TIPO2,GANHADOR,PLAYER1,PLAYER2:CARACTERE
JOGADO:LOGICO

PROCEDIMENTO VERIFICA_VITORIA(ULTIMA_CHANCE:LOGICO) //ADICIONA VITORIA AO SEU DEVIDO GAHADOR
VAR XLINHA,XCOLUNA:INTEIRO
INICIO
SE CONT_O=3 ENTAO
   SE TIPO="O" ENTAO
      GANHADOR<-PLAYER1
   SENAO
      GANHADOR<-PLAYER2
   FIMSE
SENAO
   SE CONT_X=3 ENTAO
      SE TIPO="X" ENTAO
         GANHADOR<-PLAYER1
      SENAO
         GANHADOR<-PLAYER2
      FIMSE
   SENAO
      CONT_X<-0
      PARA XLINHA DE 1 ATE 3 FACA //VERIFICA SE DEU VELHA
         PARA XCOLUNA DE 1 ATE 3 FACA
            SE (MESA[XLINHA,XCOLUNA]=TIPO) OU (MESA[XLINHA,XCOLUNA]=TIPO2) ENTAO
               CONT_X<-CONT_X+1
            FIMSE
         FIMPARA
      FIMPARA
      SE (CONT_X=9) E (ULTIMA_CHANCE=VERDADEIRO) E (GANHADOR="") ENTAO
         GANHADOR<-"#VELHA#"
      FIMSE
   FIMSE
FIMSE
CONT_X<-0
CONT_O<-0
FIMPROCEDIMENTO

PROCEDIMENTO VERIFICA_GANHADOR //VERIFICA SE PODE TER UM GANHADOR
INICIO
PARA LINHA DE 1 ATE 3 FACA //LINHA POR LINHA
   PARA COLUNA DE 1 ATE 3 FACA
      SE MESA[LINHA,COLUNA]="O" ENTAO
         CONT_O<-CONT_O+1
      SENAO
         SE MESA[LINHA,COLUNA]="X" ENTAO
            CONT_X<-CONT_X+1
         FIMSE
      FIMSE
   FIMPARA
   VERIFICA_VITORIA(FALSO)
FIMPARA
PARA COLUNA DE 1 ATE 3 FACA //COLUNA POR COLUNA
   PARA LINHA DE 1 ATE 3 FACA
      SE MESA[LINHA,COLUNA]="O" ENTAO
         CONT_O<-CONT_O+1
      SENAO
         SE MESA[LINHA,COLUNA]="X" ENTAO
            CONT_X<-CONT_X+1
         FIMSE
      FIMSE
   FIMPARA
   VERIFICA_VITORIA(FALSO)
FIMPARA
PARA COLUNA DE 1 ATE 3 FACA //VERTICAL
   SE MESA[COLUNA,COLUNA]="O" ENTAO
      CONT_O<-CONT_O+1
   SENAO
      SE MESA[COLUNA,COLUNA]="X" ENTAO
         CONT_X<-CONT_X+1
      FIMSE
   FIMSE
FIMPARA
VERIFICA_VITORIA(FALSO)
COLUNA<-3
PARA LINHA DE 1 ATE 3 FACA //VERTICAL INVERTIDA
   SE MESA[LINHA,COLUNA]="O" ENTAO
      CONT_O<-CONT_O+1
   SENAO
      SE MESA[LINHA,COLUNA]="X" ENTAO
         CONT_X<-CONT_X+1
      FIMSE
   FIMSE
   COLUNA<-COLUNA-1
FIMPARA
VERIFICA_VITORIA(VERDADEIRO) //VERIFICA SE DEU VELHA
FIMPROCEDIMENTO

PROCEDIMENTO PREENCHE_MESA //DEMONSTRA OS LOCAIS PARA O JOGADOR DECORAR
VAR CONTINUAR:CARACTERE
INICIO
MESA[1,1]<-"1"
MESA[1,2]<-"2"
MESA[1,3]<-"3"
MESA[2,1]<-"4"
MESA[2,2]<-"5"
MESA[2,3]<-"6"
MESA[3,1]<-"7"
MESA[3,2]<-"8"
MESA[3,3]<-"9"
MONTA_JOGO
ESCREVA("- DECORE OS NUMEROS DOS LOCAIS E CLIQUE ENTER PARA CONTINUAR -")
LEIA(CONTINUAR)
PARA LINHA DE 1 ATE 3 FACA
   PARA COLUNA DE 1 ATE 3 FACA
      MESA[LINHA,COLUNA]<-" "
   FIMPARA
FIMPARA
FIMPROCEDIMENTO

procedimento MONTA_JOGO() //MONTA O GRAFICO DO JOGO
inicio
limpatela
ESCREVAL(" ___________")
escreval("| ",MESA[1,1] ," | ",MESA[1,2] ," | ",MESA[1,3]," | ",PLAYER1,"=",PLACAR_P1)
ESCREVAL("|___|___|___|")
escreval("| ",MESA[2,1] ," | ",MESA[2,2] ," | ",MESA[2,3]," | ",PLAYER2,"=",PLACAR_P2)
ESCREVAL("|___|___|___|")
escreval("| ",MESA[3,1] ," | ",MESA[3,2] ," | ",MESA[3,3]," | ","VELHA=",PLACAR_V)
ESCREVAL("|___|___|___|")
ESCREVAL("")
fimprocedimento

FUNCAO ADICIONA(PLAYER:CARACTER):LOGICO
INICIO
ESCOLHA CODIGO //TRADUZ O LOCAL SELECIONADO PELO JOGADOR/MAQUINA
CASO 1
   LINHA<-1
   COLUNA<-1
CASO 2
   LINHA<-1
   COLUNA<-2
CASO 3
   LINHA<-1
   COLUNA<-3
CASO 4
   LINHA<-2
   COLUNA<-1
CASO 5
   LINHA<-2
   COLUNA<-2
CASO 6
   LINHA<-2
   COLUNA<-3
CASO 7
   LINHA<-3
   COLUNA<-1
CASO 8
   LINHA<-3
   COLUNA<-2
CASO 9
   LINHA<-3
   COLUNA<-3
FIMESCOLHA
SE MESA[LINHA,COLUNA]=" " ENTAO //VERIFICA SE O LOCAL ESTA EM BRANCO
   SE PLAYER="PLAYER1" ENTAO //VERIFICA QUAL E O JOGADOR -CASO 1 ELE SALVA A ULTIMA LINHA E ULTIMA COLUNA PARA A JOGADA DA MAQUINA
      ULINHA<-LINHA
      UCOLUNA<-COLUNA
      MESA[LINHA,COLUNA]<-TIPO
   SENAO
      SE PLAYER="PC" ENTAO
         SE (MESA[LINHA,COLUNA]<>TIPO) E (MESA[LINHA,COLUNA]<>TIPO2) ENTAO
            MESA[LINHA,COLUNA]<-TIPO2
         SENAO
            RETORNE FALSO
         FIMSE
      SENAO
         MESA[LINHA,COLUNA]<-TIPO2
      FIMSE
   FIMSE
   RETORNE VERDADEIRO
SENAO
   RETORNE FALSO
FIMSE
FIMFUNCAO

FUNCAO MAQUINA_ATACA(ULTIMA_OPCAO:LOGICO):LOGICO //MAQUINA ATACA
VAR XLINHA,CONT,XCOLUNA:INTEIRO
XATAQUE,ATAQUE:LOGICO
INICIO
ATAQUE<-FALSO
PARA LINHA DE 1 ATE 3 FACA //VERIFICA LIHA POR LINHA SE DA PRA GANHAR
   PARA COLUNA DE 1 ATE 3 FACA
      SE MESA[LINHA,COLUNA]=TIPO2 ENTAO
         CONT<-CONT+1
         SE CONT=2 ENTAO
            XATAQUE<-VERDADEIRO
         FIMSE
      FIMSE
   FIMPARA
   SE CONT=2 ENTAO //SE A MAQUINA CONSEGUIU ACHAR UM LOCAL PARA GANHAR
      XLINHA<-LINHA
      PARA COLUNA DE 1 ATE 3 FACA
         SE (MESA[XLINHA,COLUNA]<>TIPO2) ENTAO
            SE (MESA[XLINHA,COLUNA]<>TIPO) ENTAO //VERIFICA SE JA ESTA PREENCHIDO O LOCAL ESCOLHIDO
               XCOLUNA<-COLUNA
            SENAO
               XATAQUE<-FALSO
            FIMSE
         FIMSE
      FIMPARA
   FIMSE
   SE XATAQUE=VERDADEIRO ENTAO
      ATAQUE<-VERDADEIRO
   FIMSE
   CONT<-0
FIMPARA
PARA COLUNA DE 1 ATE 3 FACA //VERIFICA COLUNA POR COLUNA SE TEM COMO GANHAR
   PARA LINHA DE 1 ATE 3 FACA
      SE MESA[LINHA,COLUNA]=TIPO2 ENTAO
         CONT<-CONT+1
         SE CONT=2 ENTAO
            XATAQUE<-VERDADEIRO
         FIMSE
      FIMSE
   FIMPARA
   SE CONT=2 ENTAO //SE A MAQUINA CONSEGUIU ACHAR UM LOCAL PARA GANHAR
      XCOLUNA<-COLUNA
      PARA LINHA DE 1 ATE 3 FACA
         SE (MESA[LINHA,XCOLUNA]<>TIPO2) ENTAO
            SE (MESA[LINHA,XCOLUNA]<>TIPO) ENTAO //VERIFICA SE JA ESTA PREENCHIDO O LOCAL ESCOLHIDO
               XLINHA<-LINHA
            SENAO
               XATAQUE<-FALSO
            FIMSE
         FIMSE
      FIMPARA
   FIMSE
   SE XATAQUE=VERDADEIRO ENTAO
      ATAQUE<-VERDADEIRO
   FIMSE
   CONT<-0
FIMPARA
PARA COLUNA DE 1 ATE 3 FACA //VERIFICA NA DIAGONAL
   SE MESA[COLUNA,COLUNA]=TIPO2 ENTAO
      CONT<-CONT+1
      SE CONT=2 ENTAO
         XATAQUE<-VERDADEIRO
      FIMSE
   FIMSE
FIMPARA
SE CONT=2 ENTAO //SE A MAQUINA CONSEGUIU ACHAR UM LOCAL PARA GANHAR
   PARA COLUNA DE 1 ATE 3 FACA
      SE (MESA[COLUNA,COLUNA]<>TIPO2) ENTAO
         SE (MESA[COLUNA,COLUNA]<>TIPO) ENTAO //VERIFICA SE JA ESTA PREENCHIDO O LOCAL ESCOLHIDO
            XCOLUNA<-COLUNA
            XLINHA<-COLUNA
         SENAO
            XATAQUE<-FALSO
         FIMSE
      FIMSE
   FIMPARA
FIMSE
SE XATAQUE=VERDADEIRO ENTAO
   ATAQUE<-VERDADEIRO
FIMSE
CONT<-0
COLUNA<-3
PARA LINHA DE 1 ATE 3 FACA //VERIFICA NA DIAGONAL INVERTIDA
   SE MESA[LINHA,COLUNA]=TIPO2 ENTAO
      CONT<-CONT+1
   FIMSE
   COLUNA<-COLUNA-1
   SE CONT=2 ENTAO
      XATAQUE<-VERDADEIRO
   FIMSE
FIMPARA
SE CONT=2 ENTAO //SE A MAQUINA CONSEGUIU ACHAR UM LOCAL PARA GANHAR
   COLUNA<-3
   PARA LINHA DE 1 ATE 3 FACA
      SE (MESA[LINHA,COLUNA]<>TIPO2) ENTAO
         SE (MESA[LINHA,COLUNA]<>TIPO) ENTAO //VERIFICA SE JA ESTA PREENCHIDO O LOCAL ESCOLHIDO
            XCOLUNA<-COLUNA
            XLINHA<-LINHA
         SENAO
            XATAQUE<-FALSO
         FIMSE
      FIMSE
      COLUNA<-COLUNA-1
   FIMPARA
FIMSE
SE XATAQUE=VERDADEIRO ENTAO //VERIFICA SE PODE GANHAR REALMENTE
   ATAQUE<-VERDADEIRO
FIMSE
SE ATAQUE=VERDADEIRO ENTAO //ATACA CASO DER PRA GANHAR
   MESA[XLINHA,XCOLUNA]<-TIPO2
   RETORNE VERDADEIRO
SENAO //SENAO ATACA ALEATORIAMENTE
   SE (ATAQUE=FALSO) E (ULTIMA_OPCAO=VERDADEIRO) ENTAO //SE ULGUMA OPCAO ACEITA O ATAQUE ALEATORIO
      SE JOGADA>2 ENTAO
         PARA LINHA DE 1 ATE 3 FACA //ACHA O ULTIMO LOCAL VAZIO
            PARA COLUNA DE 1 ATE 3 FACA
               SE (MESA[LINHA,COLUNA]<>TIPO2) ENTAO
                  SE (MESA[LINHA,COLUNA]<>TIPO) ENTAO
                     XLINHA<-LINHA
                     XCOLUNA<-COLUNA
                  FIMSE
               FIMSE
            FIMPARA
         FIMPARA
         MESA[XLINHA,XCOLUNA]<-TIPO2
         RETORNE VERDADEIRO
      SENAO //SENAO FOR RODADA MAIOR QUE 2 ENTAO ELE JOGA ALEATORIO
         REPITA
            REPITA
               LINHA<-RANDI(3)
            ATE LINHA>0
            REPITA
               COLUNA<-RANDI(3)
            ATE COLUNA>0
         ATE (MESA[LINHA,COLUNA]<>TIPO2) E (MESA[LINHA,COLUNA]<>TIPO)
         MESA[LINHA,COLUNA]<-TIPO2
         RETORNE VERDADEIRO
      FIMSE
   SENAO
      RETORNE FALSO
   FIMSE
FIMSE
FIMFUNCAO

PROCEDIMENTO LOGICA_MAQUINA //MAQUINA VERIFICA SE PRECISA SE DEFENDER
INICIO
CODIGO<-0
ESCOLHA JOGADA //ESCOLHE QUAL E A RODADA QUE ESTA SENDO JOGADA
CASO 1 //PRIMEIRA JOGADA DA MAQUINA
   SE MESA[1,2] = TIPO ENTAO //VERIFICA SE O JOGADOR COMECOU PELO LOCAL 2
      CODIGO<-1
   SENAO
      SE MESA[2,2] = " " ENTAO //VERIFICA SE O LOCAL 5 ESTA VAZIO
         CODIGO<-5
      SENAO
         CODIGO<-1
      FIMSE
   FIMSE
CASO 2,3,4 //DEMAIS JOGADAS DA MAQUINA
   //DEFINE AONDE PODE SE DEFENDER
   ESCOLHA ULINHA //ESCOLHE ULTIMA LINHA JOGADA PELO JOGADOR 1
   CASO 1
      ESCOLHA UCOLUNA //ESCOLHE ULTIMA COLUNA JOGADA PELO JOGADOR 1
      CASO 1
         SE (MESA[ULINHA+1,UCOLUNA]=TIPO) E (MESA[3,1]=" ") ENTAO
            CODIGO<-7
         SENAO
            SE (MESA[ULINHA+2,UCOLUNA]=TIPO) E (MESA[2,1]=" ") ENTAO
               CODIGO<-4
            SENAO
               SE (MESA[ULINHA,UCOLUNA+1]=TIPO) E (MESA[1,3]=" ") ENTAO
                  CODIGO<-3
               SENAO
                  SE (MESA[ULINHA,UCOLUNA+2]=TIPO) E (MESA[1,2]=" ") ENTAO
                     CODIGO<-2
                  SENAO
                     SE (MESA[ULINHA+1,UCOLUNA+1]=TIPO) E (MESA[3,3]=" ") ENTAO
                        CODIGO<-9
                     SENAO
                        SE (MESA[ULINHA+2,UCOLUNA+2]=TIPO) E (MESA[2,2]=" ") ENTAO
                           CODIGO<-5
                        FIMSE
                     FIMSE
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      CASO 2
         SE (MESA[ULINHA,UCOLUNA-1]=TIPO) E (MESA[1,3]=" ") ENTAO
            CODIGO<-3
         SENAO
            SE (MESA[ULINHA,UCOLUNA+1]=TIPO) E (MESA[1,1]=" ") ENTAO
               CODIGO<-1
            SENAO
               SE (MESA[ULINHA+1,UCOLUNA]=TIPO) E (MESA[3,2]=" ") ENTAO
                  CODIGO<-8
               SENAO
                  SE (MESA[ULINHA+2,UCOLUNA]=TIPO) E (MESA[2,2]=" ") ENTAO
                     CODIGO<-5
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      CASO 3
         SE (MESA[ULINHA,UCOLUNA-1]=TIPO) E (MESA[1,1]=" ") ENTAO
            CODIGO<-1
         SENAO
            SE (MESA[ULINHA,UCOLUNA-2]=TIPO) E (MESA[1,2]=" ") ENTAO
               CODIGO<-2
            SENAO
               SE (MESA[ULINHA+1,UCOLUNA-1]=TIPO) E (MESA[3,1]=" ") ENTAO
                  CODIGO<-7
               SENAO
                  SE (MESA[ULINHA+2,UCOLUNA-2]=TIPO) E (MESA[2,2]=" ") ENTAO
                     CODIGO<-5
                  SENAO
                     SE (MESA[ULINHA+1,UCOLUNA]=TIPO) E (MESA[3,3]=" ") ENTAO
                        CODIGO<-9
                     SENAO
                        SE (MESA[ULINHA+2,UCOLUNA]=TIPO) E (MESA[2,3]=" ") ENTAO
                           CODIGO<-6
                        FIMSE
                     FIMSE
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      FIMESCOLHA
   CASO 2
      ESCOLHA UCOLUNA
      CASO 1
         SE (MESA[ULINHA-1,UCOLUNA]=TIPO) E (MESA[3,1]=" ") ENTAO
            CODIGO<-7
         SENAO
            SE (MESA[ULINHA+1,UCOLUNA]=TIPO) E (MESA[1,1]=" ") ENTAO
               CODIGO<-1
            SENAO
               SE (MESA[ULINHA,UCOLUNA+1]=TIPO) E (MESA[2,3]=" ") ENTAO
                  CODIGO<-6
               SENAO
                  SE (MESA[ULINHA,UCOLUNA+2]=TIPO) E (MESA[2,2]=" ") ENTAO
                     CODIGO<-5
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      CASO 2
         SE (MESA[ULINHA,UCOLUNA-1]=TIPO) E (MESA[2,3]=" ") ENTAO
            CODIGO<-6
         SENAO
            SE (MESA[ULINHA,UCOLUNA+1]=TIPO) E (MESA[2,1]=" ") ENTAO
               CODIGO<-4
            SENAO
               SE (MESA[ULINHA-1,UCOLUNA-1]=TIPO) E (MESA[3,3]=" ") ENTAO
                  CODIGO<-9
               SENAO
                  SE (MESA[ULINHA+1,UCOLUNA-1]=TIPO) E (MESA[1,3]=" ") ENTAO
                     CODIGO<-3
                  SENAO
                     SE (MESA[ULINHA-1,UCOLUNA+1]=TIPO) E (MESA[3,1]=" ") ENTAO
                        CODIGO<-7
                     SENAO
                        SE (MESA[ULINHA+1,UCOLUNA+1]=TIPO) E (MESA[1,1]=" ") ENTAO
                           CODIGO<-1
                        SENAO
                           SE (MESA[ULINHA-1,UCOLUNA]=TIPO) E (MESA[3,2]=" ") ENTAO
                              CODIGO<-8
                           SENAO
                              SE (MESA[ULINHA+1,UCOLUNA]=TIPO) E (MESA[1,2]=" ") ENTAO
                                 CODIGO<-2
                              FIMSE
                           FIMSE
                        FIMSE
                     FIMSE
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      CASO 3
         SE (MESA[ULINHA,UCOLUNA-1]=TIPO) E (MESA[2,1]=" ") ENTAO
            CODIGO<-4
         SENAO
            SE (MESA[ULINHA,UCOLUNA-2]=TIPO) E (MESA[2,2]=" ") ENTAO
               CODIGO<-5
            SENAO
               SE (MESA[ULINHA-1,UCOLUNA]=TIPO) E (MESA[3,3]=" ") ENTAO
                  CODIGO<-9
               SENAO
                  SE (MESA[ULINHA+1,UCOLUNA]=TIPO) E (MESA[1,3]=" ") ENTAO
                     CODIGO<-3
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      FIMESCOLHA
   CASO 3
      ESCOLHA UCOLUNA
      CASO 1
         SE (MESA[ULINHA-1,UCOLUNA]=TIPO) E (MESA[1,1]=" ") ENTAO
            CODIGO<-1
         SENAO
            SE (MESA[ULINHA-2,UCOLUNA]=TIPO) E (MESA[2,1]=" ") ENTAO
               CODIGO<-4
            SENAO
               SE (MESA[ULINHA,UCOLUNA+1]=TIPO) E (MESA[3,3]=" ") ENTAO
                  CODIGO<-9
               SENAO
                  SE (MESA[ULINHA,UCOLUNA+2]=TIPO) E (MESA[3,2]=" ") ENTAO
                     CODIGO<-8
                  SENAO
                     SE (MESA[ULINHA-1,UCOLUNA+1]=TIPO) E (MESA[1,3]=" ") ENTAO
                        CODIGO<-3
                     SENAO
                        SE (MESA[ULINHA-2,UCOLUNA+2]=TIPO) E (MESA[2,2]=" ") ENTAO
                           CODIGO<-5
                        FIMSE
                     FIMSE
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      CASO 2
         SE (MESA[ULINHA,UCOLUNA-1]=TIPO) E (MESA[3,3]=" ") ENTAO
            CODIGO<-9
         SENAO
            SE (MESA[ULINHA,UCOLUNA+1]=TIPO) E (MESA[3,1]=" ") ENTAO
               CODIGO<-7
            SENAO
               SE (MESA[ULINHA-1,UCOLUNA]=TIPO) E (MESA[1,2]=" ") ENTAO
                  CODIGO<-2
               SENAO
                  SE (MESA[ULINHA-2,UCOLUNA]=TIPO) E (MESA[2,2]=" ") ENTAO
                     CODIGO<-5
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      CASO 3
         SE (MESA[ULINHA,UCOLUNA-1]=TIPO) E (MESA[3,1]=" ") ENTAO
            CODIGO<-7
         SENAO
            SE (MESA[ULINHA,UCOLUNA-2]=TIPO) E (MESA[3,2]=" ") ENTAO
               CODIGO<-8
            SENAO
               SE (MESA[ULINHA-1,UCOLUNA]=TIPO) E (MESA[1,3]=" ") ENTAO
                  CODIGO<-3
               SENAO
                  SE (MESA[ULINHA-2,UCOLUNA]=TIPO) E (MESA[2,3]=" ") ENTAO
                     CODIGO<-6
                  SENAO
                     SE (MESA[ULINHA-1,UCOLUNA-1]=TIPO) E (MESA[1,1]=" ") ENTAO
                        CODIGO<-1
                     SENAO
                        SE (MESA[ULINHA-2,UCOLUNA-2]=TIPO) E (MESA[2,2]=" ") ENTAO
                           CODIGO<-5
                        FIMSE
                     FIMSE
                  FIMSE
               FIMSE
            FIMSE
         FIMSE
      FIMESCOLHA
   FIMESCOLHA
FIMESCOLHA
SE CODIGO<>0 ENTAO //VERIFICA SE A MAQUINA ACHOU UM LUGAR PARA SE DEFENDER
   SE ADICIONA("PC")=FALSO ENTAO //TENTA ADICIONAR NO LOCAL ESCOLHIDO
      SE MAQUINA_ATACA(VERDADEIRO)=FALSO ENTAO //CASO O ADICIONAR RETORNE FALSO, A MAQUINA TENTA ATACAR EM LUGARES ALEATORIOS
      FIMSE
   FIMSE
SENAO
   SE MAQUINA_ATACA(VERDADEIRO)=FALSO ENTAO //SE MAQUINA NAO ACHOU UM LUGAR PARA SE DEFENDER ELE ATACA EM LUGAR ALEATORIO
   FIMSE
FIMSE
MONTA_JOGO //MONTA O JOGO PARA BOA VISUALIZACAO
VERIFICA_GANHADOR //VERIFICA SE APOS JOGADA A MAQUINA GANHOU
FIMPROCEDIMENTO

inicio
REVANCHE<-2 //REVANCHE RECEBE 2 PARA INICIAR O JOGO
REPITA //REPETE ATE JOGADOR QUERER FINALIZAR O JOGO
   LIMPATELA
   SE REVANCHE=2 ENTAO //VERIFICA REVANCHE, PARA PEDIR NOMES DE JOGADOR OU NAO
      ESCREVA("DIGITE O NOME DO JOGADOR 1: ")
      LEIA(PLAYER1)
      ESCREVAL("")
      ESCREVA("DIGITE O NOME DO JOGADOR 2(PARA JOGAR CONTRA MAQUINA ESCREVA 'PC'): ")
      LEIA(PLAYER2)
      ESCREVAL("")
      REPITA //REPETE PARA NAO DEIXAR O USUARIO SELECIONAR ERRADO
         ESCREVA(PLAYER1," ESCOLHA O TIPO 'X' OU 'O': ")
         LEIA(TIPO)
      ATE (TIPO="X") OU (TIPO="O")
      SE TIPO="X" ENTAO //DIRECIONA OS TIPOS AS SUAS DEVIDAS VARIAVEIS
         TIPO2<-"O"
      SENAO
         TIPO2<-"X"
      FIMSE
   FIMSE

   SE GANHADOR=PLAYER1 ENTAO //VERIFICA GANHADOR PARA ADICIONAR PLACAR
      PLACAR_P1<-PLACAR_P1+1
   SENAO
      SE GANHADOR=PLAYER2 ENTAO
         PLACAR_P2<-PLACAR_P2+1
      SENAO
         SE GANHADOR="#VELHA#" ENTAO
            PLACAR_V<-PLACAR_V+1
         SENAO //SE NAO FOR NENHUMA DAS OPCOES ZERA O PLACAR, FUNCIONA QUANDO SELECIONA UM NOVO JOGO
            PLACAR_P1<-0
            PLACAR_P2<-0
            PLACAR_V<-0
         FIMSE
      FIMSE
   FIMSE

   PREENCHE_MESA //DEMONSTRA COMO ADICIONAR OS TIPOS NOS LOCAIS DA MATRIZ
   MONTA_JOGO //MONTA O JOGO PARA BOA VISUALIZACAO
   GANHADOR<-""
   REVANCHE<-0
   JOGADA<-0

   REPITA //REPETE ATE ACHAR GANHADOR

      JOGADA<-JOGADA+1
      ESCREVA(PLAYER1,", DIGITE O LOCAL PARA ADICIONAR SEU ",TIPO,": ")
      REPITA //REPETE ATE A JOGADA DO PLAYER 1 SER CONCLUIDA
         REPITA //REPETE ATE O USUARIO COLOCAR UM LOCAL VALIDO
            LEIA(CODIGO)
         ATE (CODIGO>0) OU (CODIGO<10)
         SE ADICIONA("PLAYER1")=VERDADEIRO ENTAO //TENTA ADICIONAR O A JOGADA NO LOCAL INFORMADO
            JOGADO<-VERDADEIRO
         SENAO
            JOGADO<-FALSO
            ESCREVAL("")
            ESCREVA("ESSE LOCAL JA ESTA PREENCHIDO, ESCOLHA OUTRO LOCAL: ")
         FIMSE
      ATE JOGADO=VERDADEIRO
      MONTA_JOGO //MONTA O JOGO PARA BOA VISUALIZACAO
      VERIFICA_GANHADOR //VERIFICA SE APOS JOGADA O PLAYER 1 GANHOU
      SE (PLAYER2<>"PC") E (GANHADOR="") E (JOGADA<5) ENTAO
         ESCREVA(PLAYER2,", DIGITE O LOCAL PARA ADICIONAR SEU ",TIPO2,": ")
         REPITA //REPETE ATE A JOGADA DO PLAYER 2 SER CONCLUIDA
            REPITA // REPETE ATE O USUARIO COLOCAR UM LOCAL VALIDO
               LEIA(CODIGO)
            ATE (CODIGO>0) OU (CODIGO<10)
            SE ADICIONA("PLAYER2")=VERDADEIRO ENTAO //TENTA ADICIONAR O A JOGADA NO LOCAL INFORMADO
               JOGADO<-VERDADEIRO
            SENAO
               JOGADO<-FALSO
               ESCREVAL("")
               ESCREVA("ESSE LOCAL JA ESTA PREENCHIDO, ESCOLHA OUTRO LOCAL: ")
            FIMSE
         ATE JOGADO=VERDADEIRO
         MONTA_JOGO //MONTA O JOGO PARA BOA VISUALIZACAO
         VERIFICA_GANHADOR //VERIFICA SE APOS JOGADA O PLAYER 2 GANHOU
      SENAO
         SE (GANHADOR="") ENTAO //MAQUINA VALIDA SE O PLAYER 1 JA GANHOU
            SE MAQUINA_ATACA(FALSO)=VERDADEIRO ENTAO //MAQUINA VERIFICA SE E POSSIVEL ATACAR PARA "GANHAR"
               MONTA_JOGO //MONTA O JOGO PARA BOA VISUALIZACAO
               VERIFICA_GANHADOR //VERIFICA SE APOS JOGADA O PLAYER 1 GANHOU
            SENAO //SE NAO FOR POSSIVEL GANHAR, A MAQUINA VERIFICA SE ELA PRECISA DEFENDER
               LOGICA_MAQUINA //MAQUINA VERIFICA SE PRECISA SE DEFENDER
            FIMSE
         FIMSE
      FIMSE
   ATE (GANHADOR<>"") OU (JOGADA=5)
   SE (GANHADOR<>"#VELHA#") E (GANHADOR<>"") ENTAO //VALIDA GANHADOR PARA ANUNCIAR NA TELA
      ESCREVAL("")
      ESCREVAL("PARABENS ", GANHADOR," VOCE GANHOU!")
      ESCREVAL("")
   SENAO
      ESCREVAL("")
      ESCREVAL("DEU VELHA # ")
      ESCREVAL("")
   FIMSE

   REPITA //REPETE ATE A OPCAO DO USUARIO SER VALIDA
      ESCREVAL("DESEJA UMA REVANCHE? 1-SIM 2-NAO") //VERIFICA SE O JOGADOR QUER REVANCHE
      ESCREVA("--> ")
      LEIA(REVANCHE)
   ATE (REVANCHE=1) OU (REVANCHE=2)
   SE REVANCHE=2 ENTAO
      REPITA //REPETE ATE A OPCAO DO USUARIO SER VALIDA
         ESCREVAL("DESEJA JOGAR NOVAMENTE COM OUTRO JOGADOR? 1-SIM 2-NAO") //VERIFICA SE O JOGADOR(S) DESEJA JOGAR NOVAMENTE
         ESCREVA("--> ")
         LEIA(FIMJOGO)
      ATE (FIMJOGO=1) OU (FIMJOGO=2)
   FIMSE
ATE FIMJOGO=2
fimalgoritmo
